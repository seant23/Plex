# -------------------------------------------------------------------------
# Error Handling
# -------------------------------------------------------------------------
# This file lets you customize the error messages for a given error level
#


1 : Fatal run-time errors. These indicate errors that can not be recovered from, such as a memory allocation problem. Execution of the script is halted.
2 : Run-time warnings (non-fatal errors). Execution of the script is not halted.
4 : Compile-time parse errors. Parse errors should only be generated by the parser.
8 : Run-time notices. Indicate that the script encountered something that could indicate an error, but could also happen in the normal course of running a script.
16 : Fatal errors that occur during PHP's initial startup. This is like an E_ERROR, except it is generated by the core of PHP.
32 : Warnings (non-fatal errors) that occur during PHP's initial startup. This is like an E_WARNING, except it is generated by the core of PHP.
64 : Fatal compile-time errors. This is like an E_ERROR, except it is generated by the Zend Scripting Engine.
128 : Compile-time warnings (non-fatal errors). This is like an E_WARNING, except it is generated by the Zend Scripting Engine.
256 : User-generated error message. This is like an E_ERROR, except it is generated in PHP code by using the PHP function trigger_error().
512 : User-generated warning message. This is like an E_WARNING, except it is generated in PHP code by using the PHP function trigger_error().
1024 : User-generated notice message. This is like an E_NOTICE, except it is generated in PHP code by using the PHP function trigger_error().
1024 : User-generated notice message. This is like an E_NOTICE, except it is generated in PHP code by using the PHP function trigger_error().
2048 : Run-time notices. Enable to have PHP suggest changes to your code which will ensure the best interoperability and forward compatibility of your code.